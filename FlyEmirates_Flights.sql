CREATE TABLE flights (
    YEAR INT,
    MONTH INT,
    DAY INT,
    DAY_OF_WEEK INT,
    AIRLINE VARCHAR(10),
    FLIGHT_NUMBER INT,
    TAIL_NUMBER VARCHAR(20),
    ORIGIN_AIRPORT VARCHAR(10),
    DESTINATION_AIRPORT VARCHAR(10),
    SCHEDULED_DEPARTURE VARCHAR(10), -- Use VARCHAR for time strings and \n
    DEPARTURE_TIME VARCHAR(10),     -- Use VARCHAR for time strings and \n
    DEPARTURE_DELAY INT,
    TAXI_OUT INT,
    WHEELS_OFF INT,
    SCHEDULED_TIME INT,
    ELAPSED_TIME INT,
    AIR_TIME INT,
    DISTANCE INT,
    WHEELS_ON INT,
    TAXI_IN INT,
    SCHEDULED_ARRIVAL VARCHAR(10),   -- Use VARCHAR for time strings and \n
    ARRIVAL_TIME VARCHAR(10),      -- Use VARCHAR for time strings and \n
    ARRIVAL_DELAY INT,
    DIVERTED INT,
    CANCELLED INT,
    CANCELLATION_REASON VARCHAR(10), -- Using VARCHAR to handle 'null' and potentially other reasons
    AIR_SYSTEM_DELAY INT,
    SECURITY_DELAY INT,
    AIRLINE_DELAY INT,
    LATE_AIRCRAFT_DELAY INT,
    WEATHER_DELAY INT
);

-- IMPORTING DATA TO THE DATABASE 

SET GLOBAL local_infile = 'ON';
load data local infile 'D:/Labmentix/Fly Emirates/flights_clean.csv'
INTO TABLE flights
FIELDS terminated by ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

-- DATETIME COLUMNS
UPDATE flights
SET
    SCHEDULED_DEPARTURE_DATETIME = CASE
        WHEN SCHEDULED_DEPARTURE = '\n' THEN NULL
        ELSE STR_TO_DATE(CONCAT(YEAR, '-', MONTH, '-', DAY, ' ', SCHEDULED_DEPARTURE), '%Y-%m-%d %H:%i:%s')
    END,
    DEPARTURE_DATETIME = CASE
        WHEN DEPARTURE_TIME = '\n' THEN NULL
        ELSE STR_TO_DATE(CONCAT(YEAR, '-', MONTH, '-', DAY, ' ', DEPARTURE_TIME), '%Y-%m-%d %H:%i:%s')
    END,
    SCHEDULED_ARRIVAL_DATETIME = CASE
        WHEN SCHEDULED_ARRIVAL = '\n' THEN NULL
        ELSE STR_TO_DATE(CONCAT(YEAR, '-', MONTH, '-', DAY, ' ', SCHEDULED_ARRIVAL), '%Y-%m-%d %H:%i:%s')
    END,
    ARRIVAL_DATETIME = CASE
        WHEN ARRIVAL_TIME = '\n' THEN NULL
        ELSE STR_TO_DATE(CONCAT(YEAR, '-', MONTH, '-', DAY, ' ', ARRIVAL_TIME), '%Y-%m-%d %H:%i:%s')
    END;

-- CANCELLATION REASON COLUMN
ALTER TABLE flights
ADD COLUMN CANCELLATION_REASON_DESC VARCHAR(255);

UPDATE flights
SET CANCELLATION_REASON_DESC =
    CASE
        WHEN CANCELLATION_REASON = 'A' THEN 'Airline'
        WHEN CANCELLATION_REASON = 'B' THEN 'Weather'
        WHEN CANCELLATION_REASON = 'C' THEN 'National Air System'
        WHEN CANCELLATION_REASON = 'D' THEN 'Security'
        WHEN CANCELLATION_REASON IS NULL THEN 'Not Cancelled'
        ELSE 'Unknown'
    END;
    
-- FLIGHT DATE COLUMN
    ALTER TABLE flights
ADD COLUMN FLIGHT_DATE DATE;
UPDATE flights
SET FLIGHT_DATE = STR_TO_DATE(CONCAT(YEAR, '-', MONTH, '-', DAY), '%Y-%c-%e');

-- INTEGRATING AIRLINES AND AIRPORT TABLES

CREATE VIEW flights_joins AS
SELECT
    f.*,
    a_airline.AIRLINE AS AIRLINE_NAME,
    a_origin.AIRPORT AS ORIGIN_AIRPORT_NAME,
    a_origin.CITY AS ORIGIN_CITY,
    a_origin.STATE AS ORIGIN_STATE,
    a_origin.COUNTRY AS ORIGIN_COUNTRY,
    a_destination.AIRPORT AS DESTINATION_AIRPORT_NAME,
    a_destination.CITY AS DESTINATION_CITY,
    a_destination.STATE AS DESTINATION_STATE,
    a_destination.COUNTRY AS DESTINATION_COUNTRY
FROM
    flights f
LEFT JOIN
    airlines a_airline ON f.AIRLINE = a_airline.IATA_CODE
LEFT JOIN
    airports a_origin ON f.ORIGIN_AIRPORT = a_origin.IATA_CODE
LEFT JOIN
    airports a_destination ON f.DESTINATION_AIRPORT = a_destination.IATA_CODE;

-- ANALYSIS and DATA EXTRACTION
-- KPI
-- On-Time Performance (OTP) Rate (%):
SELECT
    COUNT(*) AS total_flights,
    SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) AS on_time_arrivals,
    ROUND((SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS otp_rate
FROM flights_joins
WHERE CANCELLED = 0 AND DIVERTED = 0; -- Exclude cancelled and diverted flights for OTP

-- Average Departure Delay (for delayed departures):
SELECT ROUND(AVG(DEPARTURE_DELAY), 2) AS average_departure_delay_minutes
FROM flights_joins
WHERE DEPARTURE_DELAY > 0;

-- Average Arrival Delay (for delayed arrivals):
SELECT ROUND(AVG(ARRIVAL_DELAY), 2) AS average_arrival_delay_minutes
FROM flights_joins
WHERE ARRIVAL_DELAY > 0;

-- Cancellation Rate (%):
SELECT
    COUNT(*) AS total_flights,
    SUM(CANCELLED) AS total_cancelled_flights,
    ROUND((SUM(CANCELLED) * 100.0 / COUNT(*)), 2) AS cancellation_rate
FROM flights_joins;

-- Percentage contribution of each delay type (for flights with arrival delays):
SELECT
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
WHERE ARRIVAL_DELAY > 0;

-- Aggregating KPIs by Airline
SELECT
    AIRLINE_NAME,
    COUNT(*) AS total_flights,
    SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) AS on_time_arrivals,
    ROUND((SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS otp_rate,
    ROUND(AVG(CASE WHEN DEPARTURE_DELAY > 0 THEN DEPARTURE_DELAY ELSE NULL END), 2) AS average_departure_delay_minutes,
    ROUND(AVG(CASE WHEN ARRIVAL_DELAY > 0 THEN ARRIVAL_DELAY ELSE NULL END), 2) AS average_arrival_delay_minutes,
    ROUND((SUM(CANCELLED) * 100.0 / COUNT(*)), 2) AS cancellation_rate,
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
GROUP BY AIRLINE_NAME
ORDER BY total_flights DESC;

-- Aggregating KPIs by Origin Airport
SELECT
    ORIGIN_AIRPORT_NAME,
    COUNT(*) AS total_flights,
    SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) AS on_time_arrivals,
    ROUND((SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS otp_rate,
    ROUND(AVG(CASE WHEN DEPARTURE_DELAY > 0 THEN DEPARTURE_DELAY ELSE NULL END), 2) AS average_departure_delay_minutes,
    ROUND(AVG(CASE WHEN ARRIVAL_DELAY > 0 THEN ARRIVAL_DELAY ELSE NULL END), 2) AS average_arrival_delay_minutes,
    ROUND((SUM(CANCELLED) * 100.0 / COUNT(*)), 2) AS cancellation_rate,
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
GROUP BY ORIGIN_AIRPORT_NAME
ORDER BY total_flights DESC;

-- Aggregating KPIs by Destination Airport
SELECT
    DESTINATION_AIRPORT_NAME,
    COUNT(*) AS total_flights,
    SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) AS on_time_arrivals,
    ROUND((SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS otp_rate,
    ROUND(AVG(CASE WHEN DEPARTURE_DELAY > 0 THEN DEPARTURE_DELAY ELSE NULL END), 2) AS average_departure_delay_minutes,
    ROUND(AVG(CASE WHEN ARRIVAL_DELAY > 0 THEN ARRIVAL_DELAY ELSE NULL END), 2) AS average_arrival_delay_minutes,
    ROUND((SUM(CANCELLED) * 100.0 / COUNT(*)), 2) AS cancellation_rate,
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
GROUP BY DESTINATION_AIRPORT_NAME
ORDER BY total_flights DESC;

-- Aggregating KPIs by Month
SELECT
    MONTH,
    COUNT(*) AS total_flights,
    SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) AS on_time_arrivals,
    ROUND((SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS otp_rate,
    ROUND(AVG(CASE WHEN DEPARTURE_DELAY > 0 THEN DEPARTURE_DELAY ELSE NULL END), 2) AS average_departure_delay_minutes,
    ROUND(AVG(CASE WHEN ARRIVAL_DELAY > 0 THEN ARRIVAL_DELAY ELSE NULL END), 2) AS average_arrival_delay_minutes,
    ROUND((SUM(CANCELLED) * 100.0 / COUNT(*)), 2) AS cancellation_rate,
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
GROUP BY MONTH
ORDER BY MONTH;

-- Aggregating KPIs by Day of Week
SELECT
    DAY_OF_WEEK,
    COUNT(*) AS total_flights,
    SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) AS on_time_arrivals,
    ROUND((SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS otp_rate,
    ROUND(AVG(CASE WHEN DEPARTURE_DELAY > 0 THEN DEPARTURE_DELAY ELSE NULL END), 2) AS average_departure_delay_minutes,
    ROUND(AVG(CASE WHEN ARRIVAL_DELAY > 0 THEN ARRIVAL_DELAY ELSE NULL END), 2) AS average_arrival_delay_minutes,
    ROUND((SUM(CANCELLED) * 100.0 / COUNT(*)), 2) AS cancellation_rate,
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
GROUP BY DAY_OF_WEEK
ORDER BY DAY_OF_WEEK;

-- Aggregating KPIs by Time of Day (using departure hour as an example)
SELECT
    HOUR(DEPARTURE_TIME) AS departure_hour, -- Use HOUR() for MySQL
    COUNT(*) AS total_flights,
    SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) AS on_time_arrivals,
    ROUND((SUM(CASE WHEN ARRIVAL_DELAY <= 15 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS otp_rate,
    ROUND(AVG(CASE WHEN DEPARTURE_DELAY > 0 THEN DEPARTURE_DELAY ELSE NULL END), 2) AS average_departure_delay_minutes,
    ROUND(AVG(CASE WHEN ARRIVAL_DELAY > 0 THEN ARRIVAL_DELAY ELSE NULL END), 2) AS average_arrival_delay_minutes,
    ROUND((SUM(CANCELLED) * 100.0 / COUNT(*)), 2) AS cancellation_rate,
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
WHERE DEPARTURE_TIME IS NOT NULL
GROUP BY departure_hour
ORDER BY departure_hour;

-- exploratory data analysis

-- Overall flight volume
SELECT COUNT(*) AS total_flights
FROM flights_joins;

-- Total cancellations
SELECT COUNT(*) AS total_cancellations
FROM flights_joins
WHERE CANCELLED = 1;

-- Cancellations by reason
SELECT CANCELLATION_REASON_DESC, COUNT(*) AS cancellations_count
FROM flights_joins
WHERE CANCELLED = 1
GROUP BY CANCELLATION_REASON_DESC
ORDER BY cancellations_count DESC;

-- Total diversions
SELECT COUNT(*) AS total_diversions
FROM flights_joins
WHERE DIVERTED = 1;

-- Percentage contribution of each delay type:
SELECT
    ROUND((SUM(AIRLINE_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS airline_delay_contribution,
    ROUND((SUM(WEATHER_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS weather_delay_contribution,
    ROUND((SUM(AIR_SYSTEM_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS air_system_delay_contribution,
    ROUND((SUM(SECURITY_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS security_delay_contribution,
    ROUND((SUM(LATE_AIRCRAFT_DELAY) * 100.0 / NULLIF(SUM(AIRLINE_DELAY + WEATHER_DELAY + AIR_SYSTEM_DELAY + SECURITY_DELAY + LATE_AIRCRAFT_DELAY), 0)), 2) AS late_aircraft_delay_contribution
FROM flights_joins
WHERE ARRIVAL_DELAY > 0;